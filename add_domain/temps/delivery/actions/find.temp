package delivery{{.AllLowName}}

import (
	dto "{{.ProjectName}}/dto/{{.SnakeName}}"
	usecase{{.UpperName}} "{{.ProjectName}}/pkg/convertor"
	usecase{{.UpperName}} "{{.ProjectName}}/usecase/{{.SnakeName}}"
	"github.com/labstack/echo/v4"
	"net/http"
	"strconv"
)

func Find{{.UpperName}}() echo.HandlerFunc {
	return func(c echo.Context) error {
		var req dto.Find{{.UpperName}}Request
		input := c.Param("id")
		//sanitize data, prepare for send to usecase
		{{.LowerName}}ID, err := strconv.Atoi(input)
		if err != nil {
			return c.JSON(http.StatusBadRequest, err)
		}
		req.ID = uint({{.LowerName}}ID)
		//send data to usecase layer
		res, err := usecase{{.UpperName}}.InitUsecase().Find{{.UpperName}}(c.Request().Context(), req)
		if err != nil {
			tErr := convertor.TErr(err)
			return c.JSON(http.StatusPaymentRequired, tErr.Error())
		}
		return c.JSON(http.StatusOK, res)
	}
}
